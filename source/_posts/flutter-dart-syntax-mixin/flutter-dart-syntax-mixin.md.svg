<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1"
     width="1229px" height="492px" viewBox="-15 -249 1229 512">
  <defs>
    <style type="text/css"><![CDATA[
      .markmap-node {
        cursor: pointer;
      }

      .markmap-node-circle {
        fill: #fff;
        stroke-width: 1.5px;
      }

      .markmap-node-text {
        fill:  #000;
        font: 10px sans-serif;
      }

      .markmap-link {
        fill: none;
      }
    ]]></style>
  </defs>
  <g><path class="markmap-link" stroke="#929292" stroke-width="1" d="M758.8515625,205C788.8515625,205 788.8515625,192.5 818.8515625,192.5"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M758.8515625,205C788.8515625,205 788.8515625,217.5 818.8515625,217.5"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M698.8515625,226.25C728.8515625,226.25 728.8515625,205 758.8515625,205"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M698.8515625,226.25C728.8515625,226.25 728.8515625,247.5 758.8515625,247.5"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M511.51171875,163.75C541.51171875,163.75 541.51171875,101.25 571.51171875,101.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M511.51171875,163.75C541.51171875,163.75 541.51171875,126.25 571.51171875,126.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M511.51171875,163.75C541.51171875,163.75 541.51171875,151.25 571.51171875,151.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M511.51171875,163.75C541.51171875,163.75 541.51171875,176.25 571.51171875,176.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M511.51171875,163.75C541.51171875,163.75 541.51171875,201.25 571.51171875,201.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M511.51171875,163.75C541.51171875,163.75 541.51171875,226.25 571.51171875,226.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M923.9794921875,16.25C953.9794921875,16.25 953.9794921875,3.75 983.9794921875,3.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M923.9794921875,16.25C953.9794921875,16.25 953.9794921875,28.75 983.9794921875,28.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M647.201171875,41.25C677.201171875,41.25 677.201171875,16.25 707.201171875,16.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M647.201171875,41.25C677.201171875,41.25 677.201171875,41.25 707.201171875,41.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M647.201171875,41.25C677.201171875,41.25 677.201171875,66.25 707.201171875,66.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M528.1767578125,56.25C558.1767578125,56.25 558.1767578125,41.25 588.1767578125,41.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M528.1767578125,56.25C558.1767578125,56.25 558.1767578125,71.25 588.1767578125,71.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-213.75 711.087890625,-213.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-188.75 711.087890625,-188.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-163.75 711.087890625,-163.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-138.75 711.087890625,-138.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-113.75 711.087890625,-113.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-88.75 711.087890625,-88.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-63.75 711.087890625,-63.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-38.75 711.087890625,-38.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M651.087890625,-113.75C681.087890625,-113.75 681.087890625,-13.75 711.087890625,-13.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M528.1767578125,-163.75C558.1767578125,-163.75 558.1767578125,-213.75 588.1767578125,-213.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M528.1767578125,-163.75C558.1767578125,-163.75 558.1767578125,-188.75 588.1767578125,-188.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M528.1767578125,-163.75C558.1767578125,-163.75 558.1767578125,-113.75 588.1767578125,-113.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M404.1767578125,0C434.1767578125,0 434.1767578125,-163.75 464.1767578125,-163.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M404.1767578125,0C434.1767578125,0 434.1767578125,56.25 464.1767578125,56.25"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M404.1767578125,0C434.1767578125,0 434.1767578125,163.75 464.1767578125,163.75"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M264.60546875,0C294.60546875,0 294.60546875,0 324.60546875,0"></path><path class="markmap-link" stroke="#929292" stroke-width="1" d="M0,0C30,0 30,0 60,0"></path><g class="markmap-node" transform="translate(758.8515625,247.5)"><rect class="markmap-node-rect" y="-10" x="-1" width="368.8076171875" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="366.8076171875" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">这是因为在这种情况下，识别到我们从with和extends中获得了同名方法的能…</text></g><g class="markmap-node" transform="translate(818.8515625,217.5)"><rect class="markmap-node-rect" y="-10" x="-1" width="183.783203125" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="181.783203125" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">with列表中后一个的会覆盖之前的。</text></g><g class="markmap-node" transform="translate(818.8515625,192.5)"><rect class="markmap-node-rect" y="-10" x="-1" width="228.8076171875" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="226.8076171875" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">with修饰的会覆盖extends中修饰的同名方法。</text></g><g class="markmap-node" transform="translate(758.8515625,205)"><rect class="markmap-node-rect" y="-10" x="-1" width="2" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="0" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;"></text></g><g class="markmap-node" transform="translate(571.51171875,226.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="129.33984375" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="127.33984375" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">带有 with 时的方法冲突</text></g><g class="markmap-node" transform="translate(571.51171875,201.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="82.11328125" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="80.11328125" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">mixin 线性化</text></g><g class="markmap-node" transform="translate(571.51171875,176.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="126.0146484375" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="124.0146484375" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">mixin on 语法复杂用法</text></g><g class="markmap-node" transform="translate(571.51171875,151.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="86.0146484375" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="84.0146484375" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">mixin on 语法</text></g><g class="markmap-node" transform="translate(571.51171875,126.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="124.8916015625" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="122.8916015625" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">使 Mixin 类无法实例化</text></g><g class="markmap-node" transform="translate(571.51171875,101.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="286.068359375" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="284.068359375" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">Dart中实现类似Java 8以上的 default method 的同样的效果</text></g><g class="markmap-node" transform="translate(464.1767578125,163.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="49.3349609375" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="47.3349609375" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">Mixin</text></g><g class="markmap-node" transform="translate(588.1767578125,71.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="77.1279296875" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="75.1279296875" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">implements</text></g><g class="markmap-node" transform="translate(707.201171875,66.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="171.556640625" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="169.556640625" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">子类不会 继承 父类的构造函数。</text></g><g class="markmap-node" transform="translate(707.201171875,41.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="211.0146484375" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="209.0146484375" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">子类调用父类的方法，使用super关键字。</text></g><g class="markmap-node" transform="translate(983.9794921875,28.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="190.453125" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="188.453125" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">对Dart来说，指的是非下划线_开头。</text></g><g class="markmap-node" transform="translate(983.9794921875,3.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="217.1376953125" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="215.1376953125" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">对于Java来说，可见指的是非private修饰，</text></g><g class="markmap-node" transform="translate(707.201171875,16.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="218.7783203125" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="216.7783203125" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">子类可以继承父类里面 可见的属性和方法。</text></g><g class="markmap-node" transform="translate(588.1767578125,41.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="61.0244140625" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="59.0244140625" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">extends</text></g><g class="markmap-node" transform="translate(464.1767578125,56.25)"><rect class="markmap-node-rect" y="-10" x="-1" width="66" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="64" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">关系连接</text></g><g class="markmap-node" transform="translate(711.087890625,-13.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="266" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="264" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">接口可继承接口，并可多继承接口，但类只能单继承。</text></g><g class="markmap-node" transform="translate(711.087890625,-38.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="286" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="284" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">抽象方法要被实现，所以不能是静态的，也不能是私有的。</text></g><g class="markmap-node" transform="translate(711.087890625,-63.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="266" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="264" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">如果一个类里有抽象方法，那么这个类只能是抽象类。</text></g><g class="markmap-node" transform="translate(711.087890625,-88.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="156" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="154" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">抽象类里可以没有抽象方法。</text></g><g class="markmap-node" transform="translate(711.087890625,-113.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="426" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="424" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">抽象类里的抽象方法必须全部被子类实现；接口的接口方法必须全部被子类实现，否则只…</text></g><g class="markmap-node" transform="translate(711.087890625,-138.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="366" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="364" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">接口里定义的变量只能是公共的静态常量，抽象类中的变量可以是普通变量。</text></g><g class="markmap-node" transform="translate(711.087890625,-163.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="356" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="354" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">接口只能做方法的声明，抽象类可以做方法的声明，也可以做方法的实现。</text></g><g class="markmap-node" transform="translate(711.087890625,-188.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="206" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="204" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">抽象类要被子类继承，接口要被类实现。</text></g><g class="markmap-node" transform="translate(711.087890625,-213.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="166" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="164" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">抽象类和接口都不能被实例化。</text></g><g class="markmap-node" transform="translate(588.1767578125,-113.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="64.9111328125" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="62.9111328125" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">Interface</text></g><g class="markmap-node" transform="translate(588.1767578125,-188.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="56" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="54" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">抽象类</text></g><g class="markmap-node" transform="translate(588.1767578125,-213.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="56" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="54" stroke="#929292" r="4.5" style="display: none;"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">普通类</text></g><g class="markmap-node" transform="translate(464.1767578125,-163.75)"><rect class="markmap-node-rect" y="-10" x="-1" width="66" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="64" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">组成单元</text></g><g class="markmap-node" transform="translate(324.60546875,0)"><rect class="markmap-node-rect" y="-10" x="-1" width="81.5712890625" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="79.5712890625" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">Dart 与 Java</text></g><g class="markmap-node" transform="translate(60,0)"><rect class="markmap-node-rect" y="-10" x="-1" width="206.60546875" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="204.60546875" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;">title: Dart 之 implements, extends, mixi…</text></g><g class="markmap-node" transform="translate(0,0)"><rect class="markmap-node-rect" y="-10" x="-1" width="2" height="20" fill="#dfdfdf" rx="10" ry="10" stroke="#929292" stroke-width="1"></rect><circle class="markmap-node-circle" cx="0" stroke="#929292" r="4.5"></circle><text class="markmap-node-text" x="10" dy="3" text-anchor="start" style="fill-opacity: 1;"></text></g></g>
</svg>